# /docker-compose.yml (Definitive, Hardened Version)

services:
  nginx:
    image: nginx:latest
    container_name: corpus_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - web

  web:
    build: ./server
    container_name: corpus_web_app
    env_file: .env
    volumes:
      - ./server:/app
    depends_on:
      db: { condition: service_healthy }
      tika: { condition: service_healthy }
      chroma: { condition: service_healthy }
      ollama: { condition: service_healthy }

  tika:
    image: apache/tika:latest-full
    container_name: corpus_tika
    ports:
      - "9998:9998"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9998/tika"]
      interval: 20s
      timeout: 10s
      retries: 6
      start_period: 120s # More patient startup time

  db:
    image: postgres:15
    container_name: corpus_db
    env_file: .env
    volumes:
      - corpus_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s; timeout: 5s; retries: 5

  chroma:
    image: chromadb/chroma
    container_name: corpus_chroma
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/.chroma/index
    # --- THIS IS THE CRUCIAL FIX FOR CHROMA STABILITY ---
    environment:
      - ANONYMIZED_TELEMETRY=False
      - IS_PERSISTENT=TRUE
    # --- END FIX ---
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 15s; timeout: 5s; retries: 6; start_period: 60s

  ollama:
    image: ollama/ollama
    container_name: corpus_ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/"]
      interval: 30s; timeout: 10s; retries: 5; start_period: 60s

  ollama-model-puller:
    image: curlimages/curl:latest
    container_name: corpus_model_puller
    command: >
      /bin/sh -c "
      echo 'Waiting for Ollama...'; until curl -s -f http://ollama:11434/ > /dev/null; do sleep 2; done;
      echo 'Pulling llama3:8b model...'; curl http://ollama:11434/api/pull -d '{ \"name\": \"llama3:8b\" }';
      echo 'Model pull complete.';
      "
    depends_on:
      - ollama

volumes:
  corpus_data:
  chroma_data:
  ollama_data: