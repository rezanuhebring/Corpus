services:
  nginx:
    image: nginx:latest
    container_name: corpus_nginx
    ports: ["80:80"]
    volumes: ["./nginx.conf:/etc/nginx/conf.d/default.conf:ro"]
    depends_on: [web]
  web:
    build: ./server
    container_name: corpus_web_app
    env_file: .env
    volumes: ["./server:/app", "corpus_uploads:/app/uploads"]
    depends_on:
      db: { condition: service_healthy }
      redis: { condition: service_healthy }
    command: >
      sh -c "flask init-db && gunicorn --bind 0.0.0.0:5000 --workers 2 'app:create_app()'"
  worker:
    build: ./server
    container_name: corpus_worker
    env_file: .env
    volumes: ["./server:/app", "corpus_uploads:/app/uploads"]
    depends_on:
      redis: { condition: service_healthy }
      db: { condition: service_healthy }
      tika: { condition: service_healthy }
      chroma: { condition: service_healthy }
      ollama: { condition: service_healthy }
    command: "celery -A celery_worker.celery worker --loglevel=info"
  redis:
    image: redis:7-alpine
    container_name: corpus_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s; timeout: 5s; retries: 5
  tika:
    image: apache/tika:latest-full
    container_name: corpus_tika
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9998/tika"]
      interval: 15s; timeout: 10s; retries: 10; start_period: 60s
  db:
    image: postgres:15
    container_name: corpus_db
    env_file: .env
    volumes: ["corpus_data:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s; timeout: 5s; retries: 5
  chroma:
    image: chromadb/chroma
    container_name: corpus_chroma
    volumes: ["chroma_data:/chroma/.chroma/index"]
    environment: ["ANONYMIZED_TELEMETRY=False", "IS_PERSISTENT=TRUE"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 10s; timeout: 5s; retries: 5
  ollama:
    image: ollama/ollama
    container_name: corpus_ollama
    ports: ["11434:11434"]
    volumes: ["ollama_data:/root/.ollama"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/"]
      interval: 30s; timeout: 10s; retries: 5
  ollama-model-puller:
    image: curlimages/curl:latest
    container_name: corpus_model_puller
    command: >
      /bin/sh -c "until curl -s -f http://ollama:11434/ > /dev/null; do sleep 2; done; curl http://ollama:11434/api/pull -d '{ \"name\": \"tinyllama\" }';"
    depends_on: [ollama]
volumes: { corpus_data: {}, chroma_data: {}, ollama_data: {}, corpus_uploads: {} }